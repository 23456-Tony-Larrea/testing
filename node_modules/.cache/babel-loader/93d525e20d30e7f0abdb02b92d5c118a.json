{"ast":null,"code":"var _jsxFileName = \"D:\\\\vinculacion\\\\ami_app\\\\src\\\\pages\\\\dialogNotifications\\\\notification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useImperativeHandle, forwardRef } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grow from \"@material-ui/core/Grow\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport { useStyles } from \"./style\";\nimport { Card } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GrowTransition(props) {\n  return /*#__PURE__*/_jsxDEV(Grow, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_c = GrowTransition;\nconst TransitionsSnackbar = /*#__PURE__*/forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  const [state, setState] = useState({\n    open: false,\n    type: false\n  }),\n        [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  useImperativeHandle(ref, () => ({\n    handleClick(element) {\n      setState({\n        open: true,\n        type: element\n      });\n    }\n\n  }));\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  } else if (state.type === \"correct\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: state.open,\n        onClose: handleClose,\n        TransitionComponent: GrowTransition,\n        BackdropProps: {\n          classes: {\n            root: classes.rootDialog\n          }\n        },\n        PaperProps: {\n          classes: {\n            root: classes.paper\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: classes.boxTitle,\n              borderRadius: 50,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.titleWord,\n                children: [\"Respuesta Correcta!!\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n              className: classes.iconSuccess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else if (state.type === \"wrong\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: state.open,\n        onClose: handleClose,\n        TransitionComponent: GrowTransition,\n        BackdropProps: {\n          classes: {\n            root: classes.rootDialog\n          }\n        },\n        PaperProps: {\n          classes: {\n            root: classes.paper\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: classes.boxTitle,\n              borderRadius: 100,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.titleWord,\n                children: [\"Respuesta Incorrecta\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorIcon, {\n              className: classes.iconWrong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  } else if (state.type === \"finish\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: state.open,\n        onClose: handleClose,\n        TransitionComponent: GrowTransition,\n        BackdropProps: {\n          classes: {\n            root: classes.rootDialog\n          }\n        },\n        PaperProps: {\n          classes: {\n            root: classes.paper\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: classes.boxTitle,\n              borderRadius: 100,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.titleWord,\n                children: \"COMPLETASTE EL NIVEL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StarIcon, {\n              className: classes.iconFinish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}, \"0n2qtZiTEvZG6eBBI/2kzy/A/hk=\", false, function () {\n  return [useStyles, useImperativeHandle];\n}));\n_c3 = TransitionsSnackbar;\nexport default TransitionsSnackbar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GrowTransition\");\n$RefreshReg$(_c2, \"TransitionsSnackbar$forwardRef\");\n$RefreshReg$(_c3, \"TransitionsSnackbar\");","map":{"version":3,"sources":["D:/vinculacion/ami_app/src/pages/dialogNotifications/notification.js"],"names":["React","useEffect","useState","useImperativeHandle","forwardRef","Dialog","Grow","ErrorIcon","CheckCircleIcon","Typography","CardContent","StarIcon","useStyles","Card","Box","GrowTransition","props","TransitionsSnackbar","ref","state","setState","open","type","loading","setLoading","classes","handleClick","element","handleClose","root","rootDialog","paper","boxTitle","titleWord","iconSuccess","iconWrong","iconFinish"],"mappings":"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","sourcesContent":["import React, {\r\n  useEffect,\r\n  useState,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { useStyles } from \"./style\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nconst TransitionsSnackbar = forwardRef((props, ref) => {\r\n  const [state, setState] = useState({\r\n      open: false,\r\n      type: false,\r\n    }),\r\n    [loading, setLoading] = useState(true);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n  useImperativeHandle(ref, () => ({\r\n    handleClick(element) {\r\n      setState({\r\n        open: true,\r\n        type: element,\r\n      });\r\n    },\r\n  }));\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n  if (loading) {\r\n    return <Typography>Cargando...</Typography>;\r\n  } else if (state.type === \"correct\") {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n          open={state.open}\r\n          onClose={handleClose}\r\n          TransitionComponent={GrowTransition}\r\n          BackdropProps={{\r\n            classes: {\r\n              root: classes.rootDialog,\r\n            },\r\n          }}\r\n          PaperProps={{\r\n            classes: {\r\n              root: classes.paper,\r\n            },\r\n          }}\r\n        >\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Box className={classes.boxTitle} borderRadius={50}>\r\n                <Typography className={classes.titleWord}>\r\n                  Respuesta Correcta!!{\" \"}\r\n                </Typography>\r\n              </Box>\r\n              <CheckCircleIcon className={classes.iconSuccess} />\r\n            </CardContent>\r\n          </Card>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  } else if (state.type === \"wrong\") {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={state.open}\r\n          onClose={handleClose}\r\n          TransitionComponent={GrowTransition}\r\n          BackdropProps={{\r\n            classes: {\r\n              root: classes.rootDialog,\r\n            },\r\n          }}\r\n          PaperProps={{\r\n            classes: {\r\n              root: classes.paper,\r\n            },\r\n          }}\r\n        >\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Box className={classes.boxTitle} borderRadius={100}>\r\n                <Typography className={classes.titleWord}>\r\n                  Respuesta Incorrecta{\" \"}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <ErrorIcon className={classes.iconWrong} />\r\n            </CardContent>\r\n          </Card>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  } else if (state.type === \"finish\") {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n          open={state.open}\r\n          onClose={handleClose}\r\n          TransitionComponent={GrowTransition}\r\n          BackdropProps={{\r\n            classes: {\r\n              root: classes.rootDialog,\r\n            },\r\n          }}\r\n          PaperProps={{\r\n            classes: {\r\n              root: classes.paper,\r\n            },\r\n          }}\r\n        >\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Box className={classes.boxTitle} borderRadius={100}>\r\n                <Typography className={classes.titleWord}>\r\n                  COMPLETASTE EL NIVEL\r\n                </Typography>\r\n              </Box>\r\n              <StarIcon className={classes.iconFinish} />\r\n            </CardContent>\r\n          </Card>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n});\r\nexport default TransitionsSnackbar;\r\n"]},"metadata":{},"sourceType":"module"}