{"ast":null,"code":"var _jsxFileName = \"D:\\\\vinculacion\\\\ami_app\\\\src\\\\pages\\\\alphabet\\\\DraggablePiece.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useStyles } from \"./style\";\nimport useForceUpdate from \"use-force-update\";\nimport Zoom from \"@material-ui/core/Zoom\"; //Function\n\nimport getDataUser from \"../../util/get\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DraggablePiece(props) {\n  _s();\n\n  const [textContent, setTextContent] = useState(Array),\n        [stateArrayItems, setStateArrayItems] = useState(Array),\n        [puzzleSolve, setPuzzleSolve] = useState(Array);\n  const classes = useStyles();\n  const wordsxx = [\"AEIOU\", \"DA\", \"DE\"];\n  useEffect(() => {\n    begingComponents();\n    forceUpdate(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getData = async () => {\n    const user = localStorage.getItem(\"user_id\");\n    const url = process.env.REACT_APP_BACKEND + \"/stage/\" + user + \"/vocablo\";\n    await getDataUser(url).then(response => {// const currentSubLvl = response[0].sub_level;\n      // const currentLvl = response[0].level;\n    });\n  };\n\n  const forceUpdate = useForceUpdate();\n\n  const shuffle = array => {\n    const mix = array.sort(() => Math.random() - 0.5);\n    return mix;\n  };\n\n  const begingComponents = () => {\n    const word = props.arrayWord;\n    setTextContent(shuffle(word));\n    setStateArrayItems(new Array(props.arrayWord.length));\n    setPuzzleSolve(new Array(props.arrayWord.length));\n  };\n\n  const fixWord = (a, b) => {\n    if (a && b && a !== undefined && b !== undefined && b[0] !== undefined) {\n      let worldtest = \"\";\n      let option1 = [];\n      let option2 = [];\n      a.forEach(element => {\n        option1.push(element[0]);\n      });\n      b.forEach(element => {\n        if (element !== undefined || element) {\n          option2.push(element[0]);\n          worldtest += element[0];\n        }\n      });\n      getData();\n      var found = wordsxx.includes(worldtest.toString());\n\n      if (found) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  const finalSolve = () => {\n    let solv = textContent.sort((a, b) => {\n      let firstLetter = a.split(a[0]);\n      let secondLetter = b.split(b[0]);\n      return firstLetter[1] - secondLetter[1];\n    });\n    fixWord(solv, puzzleSolve) ? props.switchAnswer(\"correct\") : props.switchAnswer(\"wrong\");\n  };\n\n  const previousLevel = () => {\n    props.previousLevel();\n  };\n\n  const setText = (item, state) => {\n    let arrayUpdated = stateArrayItems;\n\n    if (state) {\n      for (let index = 0; index < arrayUpdated.length; index++) {\n        let arrayPuzzleSolve = puzzleSolve;\n\n        if (arrayPuzzleSolve[index] === undefined) {\n          arrayPuzzleSolve[index] = item;\n          setPuzzleSolve(arrayPuzzleSolve);\n          break;\n        }\n      }\n    } else {\n      let arrayPuzzleDisolve = puzzleSolve;\n\n      for (let index = 0; index < arrayPuzzleDisolve.length; index++) {\n        let arrayPuzzleDisolve = puzzleSolve;\n\n        if (arrayPuzzleDisolve[index] === item) {\n          arrayPuzzleDisolve[index] = undefined;\n          setPuzzleSolve(arrayPuzzleDisolve);\n          break;\n        }\n      }\n    }\n\n    setStateArrayItems(arrayUpdated);\n    forceUpdate();\n  };\n\n  if (textContent && stateArrayItems) {\n    let ikey = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#6495ED\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.rootGrid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            children: puzzleSolve.map(content => {\n              ikey += 1;\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                style: {\n                  backgroundColor: \"#6495ED\"\n                },\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Zoom, {\n                  in: content !== undefined,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    className: classes.rootEmptyCard,\n                    children: content === undefined ? null : /*#__PURE__*/_jsxDEV(CardContent, {\n                      onClick: () => setText(content, false),\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.title,\n                        children: content === undefined ? null : Array.from(content)[0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, ikey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            children: textContent.map(content => {\n              ikey += 10;\n              let i = textContent.indexOf(content);\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Zoom, {\n                  in: stateArrayItems[i] === undefined,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    className: classes.rootEmptyCard,\n                    children: stateArrayItems[i] !== undefined ? null : /*#__PURE__*/_jsxDEV(CardContent, {\n                      onClick: () => setText(content, true),\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.title,\n                        children: stateArrayItems[i] !== undefined ? null : Array.from(content)[0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, ikey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(DraggablePiece, \"aXUbG55r9GDT3Xa0i0HFQvugngo=\", false, function () {\n  return [useStyles, useForceUpdate];\n});\n\n_c = DraggablePiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"DraggablePiece\");","map":{"version":3,"sources":["D:/vinculacion/ami_app/src/pages/alphabet/DraggablePiece.js"],"names":["React","useEffect","useState","Card","CardContent","Typography","Grid","useStyles","useForceUpdate","Zoom","getDataUser","DraggablePiece","props","textContent","setTextContent","Array","stateArrayItems","setStateArrayItems","puzzleSolve","setPuzzleSolve","classes","wordsxx","begingComponents","forceUpdate","getData","user","localStorage","getItem","url","process","env","REACT_APP_BACKEND","then","response","shuffle","array","mix","sort","Math","random","word","arrayWord","length","fixWord","a","b","undefined","worldtest","option1","option2","forEach","element","push","found","includes","toString","finalSolve","solv","firstLetter","split","secondLetter","switchAnswer","previousLevel","setText","item","state","arrayUpdated","index","arrayPuzzleSolve","arrayPuzzleDisolve","ikey","backgroundColor","height","rootGrid","map","content","rootEmptyCard","title","from","i","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useStyles } from \"./style\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n//Function\r\nimport getDataUser from \"../../util/get\";\r\n\r\nexport default function DraggablePiece(props) {\r\n  const [textContent, setTextContent] = useState(Array),\r\n    [stateArrayItems, setStateArrayItems] = useState(Array),\r\n    [puzzleSolve, setPuzzleSolve] = useState(Array);\r\n  const classes = useStyles();\r\n  const wordsxx = [\"AEIOU\", \"DA\", \"DE\"];\r\n  useEffect(() => {\r\n    begingComponents();\r\n    forceUpdate();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const getData = async () => {\r\n    const user = localStorage.getItem(\"user_id\");\r\n    const url = process.env.REACT_APP_BACKEND + \"/stage/\" + user + \"/vocablo\";\r\n    await getDataUser(url).then((response) => {\r\n      // const currentSubLvl = response[0].sub_level;\r\n      // const currentLvl = response[0].level;\r\n    });\r\n  };\r\n  const forceUpdate = useForceUpdate();\r\n  const shuffle = (array) => {\r\n    const mix = array.sort(() => Math.random() - 0.5);\r\n    return mix;\r\n  };\r\n  const begingComponents = () => {\r\n    const word = props.arrayWord;\r\n    setTextContent(shuffle(word));\r\n\r\n    setStateArrayItems(new Array(props.arrayWord.length));\r\n    setPuzzleSolve(new Array(props.arrayWord.length));\r\n  };\r\n  const fixWord = (a, b) => {\r\n    if (a && b && a !== undefined && b !== undefined && b[0] !== undefined) {\r\n      let worldtest = \"\";\r\n      let option1 = [];\r\n      let option2 = [];\r\n      a.forEach((element) => {\r\n        option1.push(element[0]);\r\n      });\r\n\r\n      b.forEach((element) => {\r\n        if (element !== undefined || element) {\r\n          option2.push(element[0]);\r\n          worldtest += element[0];\r\n        }\r\n      });\r\n      getData();\r\n      var found = wordsxx.includes(worldtest.toString());\r\n\r\n      if (found) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const finalSolve = () => {\r\n    let solv = textContent.sort((a, b) => {\r\n      let firstLetter = a.split(a[0]);\r\n      let secondLetter = b.split(b[0]);\r\n      return firstLetter[1] - secondLetter[1];\r\n    });\r\n    fixWord(solv, puzzleSolve)\r\n      ? props.switchAnswer(\"correct\")\r\n      : props.switchAnswer(\"wrong\");\r\n  };\r\n  const previousLevel = () => {\r\n    props.previousLevel();\r\n  };\r\n  const setText = (item, state) => {\r\n    let arrayUpdated = stateArrayItems;\r\n    if (state) {\r\n      for (let index = 0; index < arrayUpdated.length; index++) {\r\n        let arrayPuzzleSolve = puzzleSolve;\r\n        if (arrayPuzzleSolve[index] === undefined) {\r\n          arrayPuzzleSolve[index] = item;\r\n          setPuzzleSolve(arrayPuzzleSolve);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      let arrayPuzzleDisolve = puzzleSolve;\r\n      for (let index = 0; index < arrayPuzzleDisolve.length; index++) {\r\n        let arrayPuzzleDisolve = puzzleSolve;\r\n        if (arrayPuzzleDisolve[index] === item) {\r\n          arrayPuzzleDisolve[index] = undefined;\r\n          setPuzzleSolve(arrayPuzzleDisolve);\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setStateArrayItems(arrayUpdated);\r\n    forceUpdate();\r\n  };\r\n\r\n  if (textContent && stateArrayItems) {\r\n    let ikey = 0;\r\n    return (\r\n      <div style={{ backgroundColor: \"#6495ED\", height: \"100vh\" }}>\r\n        <Grid container className={classes.rootGrid}>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\">\r\n              {puzzleSolve.map((content) => {\r\n                ikey += 1;\r\n                return (\r\n                  <Grid style={{ backgroundColor: \"#6495ED\" }} key={ikey} item>\r\n                    <Zoom in={content !== undefined}>\r\n                      <Card className={classes.rootEmptyCard}>\r\n                        {content === undefined ? null : (\r\n                          <CardContent onClick={() => setText(content, false)}>\r\n                            <Typography className={classes.title}>\r\n                              {content === undefined\r\n                                ? null\r\n                                : Array.from(content)[0]}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        )}\r\n                      </Card>\r\n                    </Zoom>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Grid container justify=\"center\">\r\n              {textContent.map((content) => {\r\n                ikey += 10;\r\n                let i = textContent.indexOf(content);\r\n                return (\r\n                  <Grid key={ikey} item>\r\n                    <Zoom in={stateArrayItems[i] === undefined}>\r\n                      <Card className={classes.rootEmptyCard}>\r\n                        {stateArrayItems[i] !== undefined ? null : (\r\n                          <CardContent onClick={() => setText(content, true)}>\r\n                            <Typography className={classes.title}>\r\n                              {stateArrayItems[i] !== undefined\r\n                                ? null\r\n                                : Array.from(content)[0]}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        )}\r\n                      </Card>\r\n                    </Zoom>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Typography>Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}