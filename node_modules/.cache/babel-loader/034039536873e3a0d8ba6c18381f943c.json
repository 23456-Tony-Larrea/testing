{"ast":null,"code":"import _slicedToArray from\"D:/vinculacion/ami_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Card from\"@material-ui/core/Card\";import CardContent from\"@material-ui/core/CardContent\";import Typography from\"@material-ui/core/Typography\";import Grid from\"@material-ui/core/Grid\";import{useStyles}from\"./style\";import useForceUpdate from\"use-force-update\";import{Button}from\"@material-ui/core\";import Zoom from\"@material-ui/core/Zoom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DraggablePiece(props){var _useState=useState(Array),_useState2=_slicedToArray(_useState,2),textContent=_useState2[0],setTextContent=_useState2[1],_useState3=useState(Array),_useState4=_slicedToArray(_useState3,2),stateArrayItems=_useState4[0],setStateArrayItems=_useState4[1],_useState5=useState(Array),_useState6=_slicedToArray(_useState5,2),puzzleSolve=_useState6[0],setPuzzleSolve=_useState6[1];var classes=useStyles();useEffect(function(){begingComponents();forceUpdate();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var forceUpdate=useForceUpdate();var shuffle=function shuffle(array){var mix=array.sort(function(){return Math.random()-0.5;});return mix;};var begingComponents=function begingComponents(){var word=props.arrayWord;setTextContent(shuffle(word));setStateArrayItems(new Array(props.arrayWord.length));setPuzzleSolve(new Array(props.arrayWord.length));};var fixWord=function fixWord(a,b){if(a&&b&&a!==undefined&&b!==undefined&&b[0]!==undefined){var option1=[];var option2=[];a.forEach(function(element){option1.push(element[0]);});b.forEach(function(element){if(element!==undefined||element){option2.push(element[0]);}});if(option1.length===option2.length&&JSON.stringify(option1)===JSON.stringify(option2)){return true;}else{return false;}}else{return false;}};var finalSolve=function finalSolve(){var solv=textContent.sort(function(a,b){var firstLetter=a.split(a[0]);var secondLetter=b.split(b[0]);return firstLetter[1]-secondLetter[1];});fixWord(solv,puzzleSolve)?props.switchAnswer(\"correct\"):props.switchAnswer(\"wrong\");};var previousLevel=function previousLevel(){props.previousLevel();};var setText=function setText(item,state){var arrayUpdated=stateArrayItems;var i=textContent.indexOf(item);arrayUpdated[i]===undefined?arrayUpdated[i]=false:arrayUpdated[i]=undefined;if(state){for(var index=0;index<arrayUpdated.length;index++){var arrayPuzzleSolve=puzzleSolve;if(arrayPuzzleSolve[index]===undefined){arrayPuzzleSolve[index]=item;setPuzzleSolve(arrayPuzzleSolve);break;}}}else{var arrayPuzzleDisolve=puzzleSolve;for(var _index=0;_index<arrayPuzzleDisolve.length;_index++){var _arrayPuzzleDisolve=puzzleSolve;if(_arrayPuzzleDisolve[_index]===item){_arrayPuzzleDisolve[_index]=undefined;setPuzzleSolve(_arrayPuzzleDisolve);break;}}}setStateArrayItems(arrayUpdated);forceUpdate();};if(textContent&&stateArrayItems){var ikey=0;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Grid,{container:true,className:classes.rootGrid,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",children:puzzleSolve.map(function(content){ikey+=1;return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Zoom,{in:content!==undefined,children:/*#__PURE__*/_jsx(Card,{className:classes.rootEmptyCard,children:content===undefined?null:/*#__PURE__*/_jsx(CardContent,{onClick:function onClick(){return setText(content,false);},children:/*#__PURE__*/_jsx(Typography,{className:classes.title,children:content===undefined?null:Array.from(content)[0]})})})})},ikey);})}),/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",children:textContent.map(function(content){ikey+=10;var i=textContent.indexOf(content);return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Zoom,{in:stateArrayItems[i]===undefined,children:/*#__PURE__*/_jsx(Card,{className:classes.rootCard,children:stateArrayItems[i]!==undefined?null:/*#__PURE__*/_jsx(CardContent,{onClick:function onClick(){return setText(content,true);},children:/*#__PURE__*/_jsx(Typography,{className:classes.title,children:stateArrayItems[i]!==undefined?null:Array.from(content)[0]})})})})},ikey);})}),/*#__PURE__*/_jsxs(Grid,{container:true,justify:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{disabled:!puzzleSolve[0],onClick:finalSolve,variant:\"contained\",size:\"large\",className:classes.buttonCheck,children:\"Siguiente\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{onClick:previousLevel,variant:\"contained\",size:\"large\",className:classes.buttonCheck,children:\"Anterior\"})})]})]})})});}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{children:\"Loading...\"})});}}","map":{"version":3,"sources":["D:/vinculacion/ami_app/src/pages/draggable/DraggablePiece.js"],"names":["React","useEffect","useState","Card","CardContent","Typography","Grid","useStyles","useForceUpdate","Button","Zoom","DraggablePiece","props","Array","textContent","setTextContent","stateArrayItems","setStateArrayItems","puzzleSolve","setPuzzleSolve","classes","begingComponents","forceUpdate","shuffle","array","mix","sort","Math","random","word","arrayWord","length","fixWord","a","b","undefined","option1","option2","forEach","element","push","JSON","stringify","finalSolve","solv","firstLetter","split","secondLetter","switchAnswer","previousLevel","setText","item","state","arrayUpdated","i","indexOf","index","arrayPuzzleSolve","arrayPuzzleDisolve","ikey","rootGrid","map","content","rootEmptyCard","title","from","rootCard","buttonCheck"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useStyles } from \"./style\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nexport default function DraggablePiece(props) {\r\n  const [textContent, setTextContent] = useState(Array),\r\n    [stateArrayItems, setStateArrayItems] = useState(Array),\r\n    [puzzleSolve, setPuzzleSolve] = useState(Array);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    begingComponents();\r\n    forceUpdate();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const forceUpdate = useForceUpdate();\r\n  const shuffle = (array) => {\r\n    const mix = array.sort(() => Math.random() - 0.5);\r\n    return mix;\r\n  };\r\n\r\n  const begingComponents = () => {\r\n    const word = props.arrayWord;\r\n    setTextContent(shuffle(word));\r\n    setStateArrayItems(new Array(props.arrayWord.length));\r\n    setPuzzleSolve(new Array(props.arrayWord.length));\r\n  };\r\n\r\n  const fixWord = (a, b) => {\r\n    if (a && b && a !== undefined && b !== undefined && b[0] !== undefined) {\r\n      let option1 = [];\r\n      let option2 = [];\r\n      a.forEach((element) => {\r\n        option1.push(element[0]);\r\n      });\r\n      b.forEach((element) => {\r\n        if (element !== undefined || element) {\r\n          option2.push(element[0]);\r\n        }\r\n      });\r\n      if (\r\n        option1.length === option2.length &&\r\n        JSON.stringify(option1) === JSON.stringify(option2)\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const finalSolve = () => {\r\n    let solv = textContent.sort((a, b) => {\r\n      let firstLetter = a.split(a[0]);\r\n      let secondLetter = b.split(b[0]);\r\n      return firstLetter[1] - secondLetter[1];\r\n    });\r\n    fixWord(solv, puzzleSolve)\r\n      ? props.switchAnswer(\"correct\")\r\n      : props.switchAnswer(\"wrong\");\r\n  };\r\n\r\n  const previousLevel = () => {\r\n    props.previousLevel();\r\n  };\r\n\r\n  const setText = (item, state) => {\r\n    let arrayUpdated = stateArrayItems;\r\n    let i = textContent.indexOf(item);\r\n    arrayUpdated[i] === undefined\r\n      ? (arrayUpdated[i] = false)\r\n      : (arrayUpdated[i] = undefined);\r\n    if (state) {\r\n      for (let index = 0; index < arrayUpdated.length; index++) {\r\n        let arrayPuzzleSolve = puzzleSolve;\r\n        if (arrayPuzzleSolve[index] === undefined) {\r\n          arrayPuzzleSolve[index] = item;\r\n          setPuzzleSolve(arrayPuzzleSolve);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      let arrayPuzzleDisolve = puzzleSolve;\r\n      for (let index = 0; index < arrayPuzzleDisolve.length; index++) {\r\n        let arrayPuzzleDisolve = puzzleSolve;\r\n        if (arrayPuzzleDisolve[index] === item) {\r\n          arrayPuzzleDisolve[index] = undefined;\r\n          setPuzzleSolve(arrayPuzzleDisolve);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setStateArrayItems(arrayUpdated);\r\n    forceUpdate();\r\n  };\r\n\r\n  if (textContent && stateArrayItems) {\r\n    let ikey = 0;\r\n    return (\r\n      <div>\r\n        <Grid container className={classes.rootGrid}>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\">\r\n              {puzzleSolve.map((content) => {\r\n                ikey += 1;\r\n                return (\r\n                  <Grid key={ikey} item>\r\n                    <Zoom in={content !== undefined}>\r\n                      <Card className={classes.rootEmptyCard}>\r\n                        {content === undefined ? null : (\r\n                          <CardContent onClick={() => setText(content, false)}>\r\n                            <Typography className={classes.title}>\r\n                              {content === undefined\r\n                                ? null\r\n                                : Array.from(content)[0]}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        )}\r\n                      </Card>\r\n                    </Zoom>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Grid container justify=\"center\">\r\n              {textContent.map((content) => {\r\n                ikey += 10;\r\n                let i = textContent.indexOf(content);\r\n                return (\r\n                  <Grid key={ikey} item>\r\n                    <Zoom in={stateArrayItems[i] === undefined}>\r\n                      <Card className={classes.rootCard}>\r\n                        {stateArrayItems[i] !== undefined ? null : (\r\n                          <CardContent onClick={() => setText(content, true)}>\r\n                            <Typography className={classes.title}>\r\n                              {stateArrayItems[i] !== undefined\r\n                                ? null\r\n                                : Array.from(content)[0]}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        )}\r\n                      </Card>\r\n                    </Zoom>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n            <Grid container justify=\"center\">\r\n              <Grid item>\r\n                <Button\r\n                  disabled={!puzzleSolve[0]}\r\n                  onClick={finalSolve}\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  className={classes.buttonCheck}\r\n                >\r\n                  Siguiente\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  onClick={previousLevel}\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  className={classes.buttonCheck}\r\n                >\r\n                  Anterior\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Typography>Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}