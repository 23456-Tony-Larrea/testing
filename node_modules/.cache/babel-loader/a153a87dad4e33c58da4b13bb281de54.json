{"ast":null,"code":"var _jsxFileName = \"D:\\\\vinculacion\\\\ami_app\\\\src\\\\pages\\\\Monosyllables\\\\monosyllables.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { useFourThreeCardMediaStyles } from \"@mui-treasury/styles/cardMedia/fourThree\";\nimport { useGridStyles } from \"./style\";\nimport { useStyles } from \"./style\";\nimport { Button } from \"@material-ui/core\";\nimport dataJson from \"./data.js\"; // import useForceUpdate from \"use-force-update\";\n// import TransitionsSnackbar from \"../dialogNotifications/notification\";\n\nimport getDataUser from \"../../util/get\";\nimport postDataUser from \"../../util/post\";\nimport nofound from \"../../assets/nofound.png\";\nimport AppNavBar from '../../components/navbar';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require(\"dotenv\");\n\ndotenv.config();\nlet colors = [\"#FFC300\", \"#2ECC71\", \"#BEE37B\", \"#FF5733\", \"#884EA0\", \"#3498DB\", \"#2980B9\"];\nconst nameLvls = ['Monosílabas', 'Bisílabas', \"Trisílabas\"];\nexport const MonoSyllables = /*#__PURE__*/React.memo(_c = _s2(function SolidGameCard() {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  const [data, setData] = useState(false),\n        [dataId, setDataId] = useState(false),\n        [level, setLevel] = useState(false),\n        [subLevel, setSubLevel] = useState(false),\n        [stage, setStage] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    getData(); // setLevel(\"nivel2\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!data, !level, !stage, !subLevel]); // const forceUpdate = useForceUpdate();\n\n  const gridStyles = useGridStyles();\n  const styles = useStyles({\n    color: colors[Math.floor(Math.random() * colors.length)]\n  });\n\n  const getData = async () => {\n    const user = localStorage.getItem(\"user_id\");\n    const url = process.env.REACT_APP_BACKEND + \"/stage/\" + user + \"/silabas\";\n    await getDataUser(url).then(response => {\n      let resp = response[0];\n\n      if (resp === undefined) {\n        getData();\n      } else {\n        const currentSubLvl = resp.sub_level;\n        const currentLvl = resp.level;\n        setDataId(resp._id);\n        setSubLevel(currentSubLvl);\n        setStage('silabas');\n        setLevel(currentLvl);\n        getContentLvlData(currentSubLvl, currentLvl);\n      }\n    });\n  };\n\n  const getContentLvlData = (lvl, stageCate) => {\n    setData(dataJson[stageCate][lvl]);\n  };\n\n  const nextLevel = async value => {\n    if (value === level) {\n      let arr = Object.keys(dataJson[level]);\n      let lastItem = Object.keys(dataJson[level]).length - 1;\n      const nxt = subLevel === arr[lastItem] ? 1 : parseInt(subLevel.split(\"nivel\")[1]) + 1;\n      const nxtStage = level === nameLvls[nameLvls.length - 1] ? level : nameLvls[nameLvls.indexOf(level) + 1];\n      const dataNxtLvl = JSON.stringify({\n        _id: dataId,\n        level: nxt === 1 ? nxtStage : level,\n        sub_level: subLevel === arr[lastItem] && level === nameLvls[nameLvls.length - 1] ? subLevel : `nivel${nxt}`\n      });\n\n      if (subLevel === arr[lastItem] && level === nameLvls[nameLvls.length - 1]) {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Fin del juego',\n          text: ' Fecilicades has gando este nivel',\n          showConfirmButton: false,\n          width: '22rem',\n          timer: 1500\n        });\n      } else {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Felicitaciones',\n          text: ' Respuesta correcta',\n          showConfirmButton: false,\n          width: '22rem',\n          timer: 1500\n        });\n      }\n\n      const url = process.env.REACT_APP_BACKEND + \"/stage\";\n      setTimeout(() => {\n        setData(false);\n        postDataUser(url, dataNxtLvl).then(response => {\n          if (response) {\n            getData();\n          }\n\n          if (subLevel === arr[lastItem] && level === nameLvls[nameLvls.length - 1]) {}\n        });\n      }, 1000);\n    } else {\n      Swal.fire({\n        position: 'top-end',\n        icon: 'error',\n        title: 'Vuelve Intentar',\n        text: ' Respuesta Incorrecta',\n        showConfirmButton: false,\n        width: '22rem',\n        timer: 1500\n      });\n    }\n  };\n\n  const previousLevel = async () => {\n    const url = process.env.REACT_APP_BACKEND + \"/stage\";\n    setData(false);\n    let arr = Object.keys(dataJson[level]);\n    let lastItem = Object.keys(dataJson[level]).length - 1;\n    console.log(lastItem);\n    const nxt = subLevel === arr[0] ? lastItem + 1 : parseInt(subLevel.split(\"nivel\")[1]) - 1;\n    const nxtStage = level === nameLvls[0] ? level : nameLvls[nameLvls.indexOf(level) - 1];\n    const dataNxtLvl = JSON.stringify({\n      _id: dataId,\n      level: subLevel === arr[0] ? nxtStage : level,\n      sub_level: `nivel${nxt}`\n    });\n    await postDataUser(url, dataNxtLvl).then(response => {\n      if (response) {\n        getData();\n      }\n    });\n  };\n\n  const CustomCard = ({\n    classes,\n    image,\n    title,\n    content\n  }) => {\n    _s();\n\n    const mediaStyles = useFourThreeCardMediaStyles();\n\n    if (!data || data === undefined) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          className: classes.actionArea,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: data.length < 3 ? classes.card : classes.cardMinSize,\n            onClick: () => nextLevel(content),\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              classes: mediaStyles,\n              image: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.content,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.titleCard,\n                variant: \"h3\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  _s(CustomCard, \"8Ztuwl2CBDgerqzu2sm/ksqDgoE=\", false, function () {\n    return [useFourThreeCardMediaStyles];\n  });\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#6495ED\",\n        height: \"100vh\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AppNavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.titleWord,\n          children: `Selecciona la opción correspondiente a ${level}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          classes: gridStyles,\n          container: true,\n          spacing: 4,\n          children: data.map(content => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(CustomCard, {\n                classes: styles,\n                content: content.category,\n                title: content.title,\n                image: !content.img || content.img === undefined ? nofound : content.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: subLevel === \"nivel1\" && level === 'Monosílabas',\n              onClick: previousLevel,\n              variant: \"contained\",\n              size: \"large\",\n              className: classes.buttonCheck,\n              children: \"Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n}, \"8uF4jJa1GmAtfQEQnkloGIvykkA=\", false, function () {\n  return [useStyles, useGridStyles, useStyles];\n}));\n_c2 = MonoSyllables;\nexport default MonoSyllables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MonoSyllables$React.memo\");\n$RefreshReg$(_c2, \"MonoSyllables\");","map":{"version":3,"sources":["D:/vinculacion/ami_app/src/pages/Monosyllables/monosyllables.js"],"names":["React","useEffect","useState","Grid","Typography","CardActionArea","Card","CardContent","CardMedia","useFourThreeCardMediaStyles","useGridStyles","useStyles","Button","dataJson","getDataUser","postDataUser","nofound","AppNavBar","Swal","dotenv","require","config","colors","nameLvls","MonoSyllables","memo","SolidGameCard","data","setData","dataId","setDataId","level","setLevel","subLevel","setSubLevel","stage","setStage","classes","getData","gridStyles","styles","color","Math","floor","random","length","user","localStorage","getItem","url","process","env","REACT_APP_BACKEND","then","response","resp","undefined","currentSubLvl","sub_level","currentLvl","_id","getContentLvlData","lvl","stageCate","nextLevel","value","arr","Object","keys","lastItem","nxt","parseInt","split","nxtStage","indexOf","dataNxtLvl","JSON","stringify","fire","position","icon","title","text","showConfirmButton","width","timer","setTimeout","previousLevel","console","log","CustomCard","image","content","mediaStyles","actionArea","card","cardMinSize","titleCard","backgroundColor","height","textAlign","titleWord","map","category","img","buttonCheck","root"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { useFourThreeCardMediaStyles } from \"@mui-treasury/styles/cardMedia/fourThree\";\r\nimport { useGridStyles } from \"./style\";\r\nimport { useStyles } from \"./style\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport dataJson from \"./data.js\";\r\n// import useForceUpdate from \"use-force-update\";\r\n// import TransitionsSnackbar from \"../dialogNotifications/notification\";\r\nimport getDataUser from \"../../util/get\";\r\nimport postDataUser from \"../../util/post\";\r\nimport  nofound  from \"../../assets/nofound.png\";\r\nimport AppNavBar from '../../components/navbar'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\n\r\n\r\nlet colors = [\r\n  \"#FFC300\",\r\n  \"#2ECC71\",\r\n  \"#BEE37B\",\r\n  \"#FF5733\",\r\n  \"#884EA0\",\r\n  \"#3498DB\",\r\n  \"#2980B9\",\r\n];\r\nconst nameLvls = ['Monosílabas', 'Bisílabas', \"Trisílabas\"]\r\nexport const MonoSyllables = React.memo(function SolidGameCard() {\r\n  const [data, setData] = useState(false),\r\n  [dataId, setDataId] = useState(false),\r\n    [level, setLevel] = useState(false),\r\n    [subLevel, setSubLevel] = useState(false),\r\n    [stage, setStage] = useState(false);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getData();\r\n\r\n    // setLevel(\"nivel2\");\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [!data, !level, !stage, !subLevel]);\r\n  // const forceUpdate = useForceUpdate();\r\n  const gridStyles = useGridStyles();\r\n  const styles = useStyles({ color: colors[Math.floor(Math.random() * colors.length)] });\r\n\r\n  const getData = async () => {\r\n    const user = localStorage.getItem(\"user_id\");\r\n    const url = process.env.REACT_APP_BACKEND +\"/stage/\"+user+\"/silabas\";\r\n    await getDataUser(url).then((response) => {\r\n      let resp =response[0];\r\n        if(resp === undefined){\r\n          getData();}\r\n          else{\r\n            const currentSubLvl = resp.sub_level;\r\n            const currentLvl = resp.level;\r\n            \r\n            setDataId(resp._id)\r\n            setSubLevel(currentSubLvl);\r\n            setStage('silabas')\r\n            setLevel(currentLvl);\r\n            getContentLvlData(currentSubLvl, currentLvl);\r\n          }\r\n      \r\n\r\n    })\r\n\r\n  };\r\n  const getContentLvlData = (lvl, stageCate) => {\r\n    \r\n    setData(dataJson[stageCate][lvl]);\r\n  \r\n  };\r\n  const nextLevel = async(value) => {\r\n    if (value === level) {\r\n      let arr = Object.keys(dataJson[level])\r\n      let lastItem =   Object.keys(dataJson[level]).length-1\r\n      const nxt = subLevel===arr[lastItem]?1:parseInt(subLevel.split(\"nivel\")[1]) + 1;\r\n      const nxtStage = level===nameLvls[nameLvls.length-1]?level:nameLvls[nameLvls.indexOf(level)+1]\r\n      const dataNxtLvl = JSON.stringify({\r\n        _id: dataId,\r\n        level: nxt===1?nxtStage:level,\r\n        sub_level: subLevel===arr[lastItem]&&level===nameLvls[nameLvls.length-1]?subLevel:`nivel${nxt}`\r\n      })\r\n      if(subLevel===arr[lastItem]&&level===nameLvls[nameLvls.length-1]){\r\n        Swal.fire({\r\n          position: 'top-end',\r\n          icon: 'success',\r\n          title: 'Fin del juego',\r\n          text: ' Fecilicades has gando este nivel',\r\n          showConfirmButton: false,\r\n          width: '22rem',\r\n          timer: 1500\r\n        });        \r\n      }else{\r\n        Swal.fire({\r\n          position: 'top-end',\r\n          icon: 'success',\r\n          title: 'Felicitaciones',\r\n          text: ' Respuesta correcta',\r\n          showConfirmButton: false,\r\n          width: '22rem',\r\n          timer: 1500\r\n        })\r\n      }\r\n      \r\n      const url =process.env.REACT_APP_BACKEND +\"/stage\";\r\n      \r\n \r\n      setTimeout(() => {\r\n        setData(false);\r\n         postDataUser(url,dataNxtLvl).then(response =>{\r\n          if(response){\r\n            getData()\r\n          }\r\n          if(subLevel===arr[lastItem]&&level===nameLvls[nameLvls.length-1]){          }\r\n        })\r\n      }, 1000);\r\n    }else{\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        icon: 'error',\r\n        title: 'Vuelve Intentar',\r\n        text: ' Respuesta Incorrecta',\r\n        showConfirmButton: false,\r\n        width: '22rem',\r\n        timer: 1500\r\n      });\r\n    }\r\n\r\n  };\r\n  const previousLevel = async() => {\r\n    const url =\r\n    process.env.REACT_APP_BACKEND +\"/stage\";\r\n    setData(false);\r\n    let arr = Object.keys(dataJson[level])\r\n    let lastItem =   Object.keys(dataJson[level]).length-1\r\n    console.log(lastItem)\r\n    const nxt = subLevel===arr[0]?lastItem+1:parseInt(subLevel.split(\"nivel\")[1]) - 1;\r\n    const nxtStage = level===nameLvls[0]?level:nameLvls[nameLvls.indexOf(level)-1]\r\n    const dataNxtLvl = JSON.stringify({\r\n      _id: dataId,\r\n      level: subLevel===arr[0]?nxtStage:level,\r\n      sub_level: `nivel${nxt}`\r\n    })\r\n    await postDataUser(url,dataNxtLvl).then(response =>{\r\n      if(response){\r\n        getData()\r\n      }\r\n    })\r\n    \r\n  };\r\n\r\n  const CustomCard = ({ classes, image, title, content }) => {\r\n    const mediaStyles = useFourThreeCardMediaStyles();\r\n    if (!data || data === undefined) {\r\n      return <Typography>Cargando...</Typography>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <CardActionArea className={classes.actionArea}>\r\n          <Card\r\n            className={data.length < 3 ? classes.card : classes.cardMinSize}  onClick={()=>nextLevel(content)}\r\n          >\r\n            <CardMedia classes={mediaStyles} image={image} />\r\n            <CardContent className={classes.content}>\r\n              <Typography className={classes.titleCard} variant={\"h3\"}>\r\n                {title}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </CardActionArea>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  };\r\n  if (!data) {\r\n    return <Typography>Cargando...</Typography>;\r\n  } else {\r\n    return (\r\n      <div  style={{ backgroundColor:\"#6495ED\", height:\"100vh\", textAlign: \"center\", }}>\r\n\r\n      <>\r\n        <AppNavBar/> \r\n        <br></br>\r\n        <Typography className={classes.titleWord}>{`Selecciona la opción correspondiente a ${level}`}</Typography>\r\n        <br></br>\r\n        <Grid classes={gridStyles} container spacing={4}>\r\n          {data.map((content) => {\r\n            return (\r\n              <Grid item>\r\n                <CustomCard\r\n                  classes={styles}\r\n                  content={content.category}\r\n                  title={content.title}\r\n                  image={\r\n                    !content.img||content.img===undefined?nofound:content.img\r\n                  }\r\n                 \r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              disabled={subLevel === \"nivel1\" && level==='Monosílabas'}\r\n              onClick={previousLevel}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              className={classes.buttonCheck}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.root}>\r\n            </div>\r\n      </>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n});\r\nexport default MonoSyllables;"]},"metadata":{},"sourceType":"module"}